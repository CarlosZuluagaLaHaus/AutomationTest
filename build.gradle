buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.freefair.gradle:lombok-plugin:5.0.0-rc6"
        classpath "net.serenity-bdd:serenity-gradle-plugin:2.2.0"
        classpath "net.serenity-bdd:serenity-single-page-report:2.2.0"
        classpath "gradle.plugin.com.github.sherter.google-java-format:google-java-format-gradle-plugin:0.8"
    }
}

plugins {
    id "java"
    id "io.freefair.lombok" version "5.0.0-rc6"
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

apply plugin: "io.freefair.lombok"
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: 'com.github.sherter.google-java-format'

group 'com.lahaus.certification'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

serenity {
    reports = ["single-page-html"]
}

dependencies {
    compile("org.hibernate:hibernate-core:5.4.18.Final")
    compile("org.hibernate:hibernate-entitymanager:5.4.18.Final")
    compile("org.hibernate:hibernate-ehcache:5.4.18.Final")
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    implementation 'org.apache.logging.log4j:log4j-api:2.11.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.11.1'
    implementation "net.serenity-bdd:serenity-core:2.2.0",
            "net.serenity-bdd:serenity-screenplay:2.2.0",
            "net.serenity-bdd:serenity-screenplay-rest:2.2.0",
            "net.serenity-bdd:serenity-screenplay-webdriver:2.2.0"
    implementation "com.fasterxml.jackson.core:jackson-core:2.10.3",
            "com.fasterxml.jackson.core:jackson-databind:2.10.3",
            "com.fasterxml.jackson.core:jackson-annotations:2.10.3"
    testImplementation "net.serenity-bdd:serenity-cucumber5:2.2.0",
            "junit:junit:4.12",
            "org.hamcrest:hamcrest-all:1.3"
}

test {
    maxParallelForks = Runtime.runtime.availableProcessors()
}

tasks.withType(Test) {
    maxParallelForks = Runtime.runtime.availableProcessors()
}

wrapper {
    gradleVersion = '6.8'
}

compileJava.dependsOn 'googleJavaFormat'
gradle.startParameter.continueOnFailure = true
test.finalizedBy(aggregate, reports)